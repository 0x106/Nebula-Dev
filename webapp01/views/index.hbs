
<head>
  <script type="text/javascript">
    /**
     * Function called when clicking the Login/Logout button.
     */
    // [START buttoncallback]
    function toggleSignIn() {
      if (!firebase.auth().currentUser) {
        // [START createprovider]
        var provider = new firebase.auth.GoogleAuthProvider();
        // [END createprovider]
        // [START addscopes]
        // provider.addScope('https://www.googleapis.com/auth/contacts.readonly');
        // [END addscopes]
        // [START signin]
        firebase.auth().signInWithPopup(provider).then(function(result) {
          // This gives you a Google Access Token. You can use it to access the Google API.
          var token = result.credential.accessToken;
          // The signed-in user info.
          var user = result.user;
          console.log(user);
          // [START_EXCLUDE]
          // document.getElementById('quickstart-oauthtoken').textContent = token;
          // [END_EXCLUDE]
        }).catch(function(error) {
          // Handle Errors here.
          var errorCode = error.code;
          var errorMessage = error.message;
          // The email of the user's account used.
          var email = error.email;
          // The firebase.auth.AuthCredential type that was used.
          var credential = error.credential;
          // [START_EXCLUDE]
          if (errorCode === 'auth/account-exists-with-different-credential') {
            alert('You have already signed up with a different auth provider for that email.');
            // If you are using multiple auth providers on your app you should handle linking
            // the user's accounts here.
          } else {
            console.error(error);
          }
          // [END_EXCLUDE]
        });
        // [END signin]
      } else {
        // [START signout]
        firebase.auth().signOut();
        // [END signout]
      }
      // [START_EXCLUDE]
      // document.getElementById('quickstart-sign-in').disabled = true;
      // [END_EXCLUDE]
    }
    // [END buttoncallback]
    /**
     * initApp handles setting up UI event listeners and registering Firebase auth listeners:
     *  - firebase.auth().onAuthStateChanged: This listener is called when the user is signed in or
     *    out, and that is where we update the UI.
     */
    function initApp() {
      // Listening for auth state changes.
      // [START authstatelistener]
      firebase.auth().onAuthStateChanged(function(user) {
        if (user) {
          // User is signed in.
          var displayName = user.displayName;
          var email = user.email;
          var emailVerified = user.emailVerified;
          var photoURL = user.photoURL;
          var isAnonymous = user.isAnonymous;
          var uid = user.uid;
          var providerData = user.providerData;
          // [START_EXCLUDE]
          // document.getElementById('quickstart-sign-in-status').textContent = 'Signed in';
          // document.getElementById('quickstart-sign-in').textContent = 'Sign out';
          // document.getElementById('quickstart-account-details').textContent = JSON.stringify(user, null, '  ');
          // [END_EXCLUDE]
        } else {
          // User is signed out.
          // [START_EXCLUDE]
          // document.getElementById('quickstart-sign-in-status').textContent = 'Signed out';
          // document.getElementById('quickstart-sign-in').textContent = 'Sign in with Google';
          // document.getElementById('quickstart-account-details').textContent = 'null';
          // document.getElementById('quickstart-oauthtoken').textContent = 'null';
          // [END_EXCLUDE]
        }
        // [START_EXCLUDE]
        // document.getElementById('quickstart-sign-in').disabled = false;
        // [END_EXCLUDE]
      });
      // [END authstatelistener]
      document.getElementById('signinbuttonlabel').addEventListener('click', toggleSignIn, false);
    }
    window.onload = function() {
      initApp();
    };
  </script>
</head>


<!-- <h1 class="h1-index">{{title}}</h1> -->
<h1 class="h1-dashboard">{{title}}</h1>

<div class="button-index">
  <label for="signinbutton" class="button-style" id="signinbuttonlabel">
      <p>Sign Up</p>
  </label>
  <button id="signinbutton"></button>
</div>


<div class="wrapper" >

  <div class="grid-item">
      <img src="https://www.atlasreality.xyz/boltFill.svg" alt={{this.aid}} height="48" width="48">
      <p class="sceneTitle">Neuromancer</p>
  </div>

  <div class="grid-item">
      <img src="https://www.atlasreality.xyz/boltFill.svg" alt={{this.aid}} height="48" width="48">
      <p class="sceneTitle">Wintermute</p>
  </div>

  <div class="grid-item">
      <img src="https://www.atlasreality.xyz/boltFill.svg" alt={{this.aid}} height="48" width="48">
      <p class="sceneTitle">Hyperion</p>
  </div>

</div>


<!-- <ul class="ul-dashboard">
<li class="li-dashboard">Item One</li>
<li class="li-dashboard">Item Two</li>
<li class="li-dashboard">Item Three</li>
</ul> -->












<!-- end -->




<!--

1. After signin go to the "dashboard page"
    - hide all the index elements
    - show all the dashboard elements

2. Retrieve the list of folders from the storage uid

3. Get the relevant information

4. Create / display the list of scenes
    - should be able to programmatically add
    - https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement

5. add download button

6. allow download on click



 -->
